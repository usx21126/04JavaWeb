<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xh.mapper.StudentMapper">
    <insert id="addStudent" parameterType="com.xh.entity.Student">
        insert into student(id, name, no, gender, phone, id_card, is_college, address, degree, graduation_date, clazz_id, violation_count, violation_score, create_time, update_time)
        values(null,#{name},#{no},#{gender},#{phone},#{idCard},#{isCollege},#{address},#{degree},#{graduationDate},#{clazzId},#{violationCount},#{violationCount},#{createTime},#{updateTime})
    </insert>
    <update id="updateStudent" parameterType="com.xh.entity.Student">
        update student
        <set>
            <if test="name != null and name !=''"> name = #{name},</if>
            <if test="no != null and no !=''">no = #{no},</if>
            <if test="phone != null and phone !=''">phone = #{phone},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="degree != null">degree = #{degree},</if>
            <if test="idCard != null and idCard !=''">id_card = #{idCard},</if>
            <if test="isCollege != null">is_college = #{isCollege},</if>
            <if test="address != null and address !=''">address = #{address},</if>
            <if test="graduationDate!=null">graduation_date = #{graduationDate},</if>
            <if test="violationCount != null">violation_count = #{violationCount},</if>
            <if test="violationScore != null">violation_score = #{violationScore}</if>
        </set>
        where id = #{id}
    </update>
    <update id="updateStudentViolation">
        update student
        <set>
            <if test="score != null">
                violation_count = violation_count + 1,violation_Score = violation_Score + #{score}
            </if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteStudentsByClazzId">
        delete
        from student
        where clazz_id = #{id}
    </delete>
    <delete id="deleteStudents">
        delete from student where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <select id="getStudents" resultType="com.xh.entity.Student" parameterType="com.xh.entity.StudentQueryParam">
        select student.*,clazz.name clazzName from student left join clazz on student.clazz_id = clazz.id
        <where>
            <if test="name !=null and name !=''">student.name like concat('%',#{name},'%')</if>
            <if test="degree !=null">and degree = #{degree}</if>
            <if test="clazzId">and clazz_id = #{clazzId}</if>
        </where>
        order by update_time desc
        limit #{offset},#{pageSize}
    </select>
    <select id="getCount" resultType="java.lang.Integer">
        select count(*) from student left join clazz on student.clazz_id = clazz.id
        <where>
            <if test="name !=null and name !=''">student.name like concat('%',#{name},'%')</if>
            <if test="degree !=null">and degree = #{degree}</if>
            <if test="clazzId">and clazz_id = #{clazzId}</if>
        </where>
    </select>
    <select id="getStudentById" resultType="com.xh.entity.Student">
        select id,name,id, name, no, gender, phone, id_card, is_college, address, degree, graduation_date, clazz_id, violation_count, violation_score, create_time, update_time from student
        where id = #{id}
    </select>
</mapper>